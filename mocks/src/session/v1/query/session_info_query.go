// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/Bhinneka/user-service/src/session/v1/model"
	mock "github.com/stretchr/testify/mock"

	query "github.com/Bhinneka/user-service/src/session/v1/query"

	v1model "github.com/Bhinneka/user-service/src/member/v1/model"
)

// SessionInfoQuery is an autogenerated mock type for the SessionInfoQuery type
type SessionInfoQuery struct {
	mock.Mock
}

// GetDetailSessionInfo provides a mock function with given fields: ctxReq, params
func (_m *SessionInfoQuery) GetDetailSessionInfo(ctxReq context.Context, params model.ParametersGetSession) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq, params)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context, model.ParametersGetSession) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}

// GetHistorySessionInfo provides a mock function with given fields: ctxReq, params
func (_m *SessionInfoQuery) GetHistorySessionInfo(ctxReq context.Context, params *v1model.ParametersLoginActivity) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq, params)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context, *v1model.ParametersLoginActivity) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}

// GetListSessionInfo provides a mock function with given fields: ctxReq, params
func (_m *SessionInfoQuery) GetListSessionInfo(ctxReq context.Context, params *model.ParamList) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq, params)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context, *model.ParamList) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}

// GetTotalHistorySessionInfo provides a mock function with given fields: ctxReq, params
func (_m *SessionInfoQuery) GetTotalHistorySessionInfo(ctxReq context.Context, params *v1model.ParametersLoginActivity) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq, params)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context, *v1model.ParametersLoginActivity) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}

// GetTotalSessionInfo provides a mock function with given fields: params
func (_m *SessionInfoQuery) GetTotalSessionInfo(params *model.ParamList) <-chan query.ResultQuery {
	ret := _m.Called(params)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(*model.ParamList) <-chan query.ResultQuery); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}
