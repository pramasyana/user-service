// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/Bhinneka/user-service/src/shared/model"
	mock "github.com/stretchr/testify/mock"
)

// LogUsecase is an autogenerated mock type for the LogUsecase type
type LogUsecase struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: ctx, param
func (_m *LogUsecase) GetAll(ctx context.Context, param *model.Parameters) <-chan model.ResultUseCase {
	ret := _m.Called(ctx, param)

	var r0 <-chan model.ResultUseCase
	if rf, ok := ret.Get(0).(func(context.Context, *model.Parameters) <-chan model.ResultUseCase); ok {
		r0 = rf(ctx, param)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan model.ResultUseCase)
		}
	}

	return r0
}

// GetByID provides a mock function with given fields: ctx, logID
func (_m *LogUsecase) GetByID(ctx context.Context, logID string) <-chan model.ResultUseCase {
	ret := _m.Called(ctx, logID)

	var r0 <-chan model.ResultUseCase
	if rf, ok := ret.Get(0).(func(context.Context, string) <-chan model.ResultUseCase); ok {
		r0 = rf(ctx, logID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan model.ResultUseCase)
		}
	}

	return r0
}
