// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	query "github.com/Bhinneka/user-service/src/phone_area/v1/query"
	mock "github.com/stretchr/testify/mock"
)

// PhoneAreaQuery is an autogenerated mock type for the PhoneAreaQuery type
type PhoneAreaQuery struct {
	mock.Mock
}

// Count provides a mock function with given fields: ctxReq
func (_m *PhoneAreaQuery) Count(ctxReq context.Context) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}

// FindAll provides a mock function with given fields: ctxReq
func (_m *PhoneAreaQuery) FindAll(ctxReq context.Context) <-chan query.ResultQuery {
	ret := _m.Called(ctxReq)

	var r0 <-chan query.ResultQuery
	if rf, ok := ret.Get(0).(func(context.Context) <-chan query.ResultQuery); ok {
		r0 = rf(ctxReq)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan query.ResultQuery)
		}
	}

	return r0
}
