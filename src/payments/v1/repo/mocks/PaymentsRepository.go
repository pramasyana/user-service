// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/Bhinneka/user-service/src/payments/v1/model"
	mock "github.com/stretchr/testify/mock"

	repo "github.com/Bhinneka/user-service/src/payments/v1/repo"
)

// PaymentsRepository is an autogenerated mock type for the PaymentsRepository type
type PaymentsRepository struct {
	mock.Mock
}

// AddUpdatePayment provides a mock function with given fields: ctxReq, payments
func (_m *PaymentsRepository) AddUpdatePayment(ctxReq context.Context, payments model.Payments) <-chan repo.ResultRepository {
	ret := _m.Called(ctxReq, payments)

	var r0 <-chan repo.ResultRepository
	if rf, ok := ret.Get(0).(func(context.Context, model.Payments) <-chan repo.ResultRepository); ok {
		r0 = rf(ctxReq, payments)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan repo.ResultRepository)
		}
	}

	return r0
}

// FindPaymentByEmailChannelMethod provides a mock function with given fields: ctxReq, email, channel, method
func (_m *PaymentsRepository) FindPaymentByEmailChannelMethod(ctxReq context.Context, email string, channel string, method string) repo.ResultRepository {
	ret := _m.Called(ctxReq, email, channel, method)

	var r0 repo.ResultRepository
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) repo.ResultRepository); ok {
		r0 = rf(ctxReq, email, channel, method)
	} else {
		r0 = ret.Get(0).(repo.ResultRepository)
	}

	return r0
}
